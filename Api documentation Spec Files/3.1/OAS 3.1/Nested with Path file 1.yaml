openapi: 3.1.0
info:
  title: Nested Example API
  description: A sample API demonstrating nested schemas and structured paths.
  version: 1.0.0
servers:
  - url: https://api.example.com
    description: Production server
paths:
  /parent/{parentId}:
    get:
      summary: Get parent details
      description: Retrieve details of a parent object by its ID.
      parameters:
        - name: parentId
          in: path
          required: true
          description: ID of the parent object
          schema:
            type: string
      responses:
        "200":
          description: Successfully retrieved parent details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParentSchema"
        "404":
          description: Parent not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /parent/{parentId}/child/{childId}:
    get:
      summary: Get child details
      description: Retrieve details of a child object nested under a specific parent.
      parameters:
        - name: parentId
          in: path
          required: true
          description: ID of the parent object
          schema:
            type: string
        - name: childId
          in: path
          required: true
          description: ID of the child object
          schema:
            type: string
      responses:
        "200":
          description: Successfully retrieved child details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChildSchema"
        "404":
          description: Child not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  schemas:
    ParentSchema:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the parent object.
        name:
          type: string
          description: Name of the parent object.
        children:
          type: array
          items:
            $ref: "#/components/schemas/ChildSchema"
    ChildSchema:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the child object.
        name:
          type: string
          description: Name of the child object.
        details:
          $ref: "#/components/schemas/DetailsSchema"
    DetailsSchema:
      type: object
      properties:
        description:
          type: string
          description: Detailed information about the child object.
        metadata:
          type: object
          properties:
            createdAt:
              type: string
              format: date-time
              description: Creation timestamp.
            updatedAt:
              type: string
              format: date-time
              description: Last update timestamp.
    ErrorResponse:
      type: object
      properties:
        errorCode:
          type: integer
        message:
          type: string

tags:
  - name: ParentOperations
    description: Operations related to parent objects.
  - name: ChildOperations
    description: Operations related to child objects.

externalDocs:
  description: Learn more about this API.
  url: https://example.com/docs
